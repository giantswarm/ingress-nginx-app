version: 2.1
orbs:
  architect: giantswarm/architect@0.8.9

e2eTest: &e2eTest
  machine: true
  working_directory: /home/circleci/.go_workspace/src/github.com/giantswarm/nginx-ingress-controller-app
  steps:
    - checkout

    - attach_workspace:
        at: .

    - run:
        name: Get e2ectl binary
        command: |
          wget -q $(curl -sS https://api.github.com/repos/giantswarm/e2ectl/releases/latest | grep browser_download_url | head -n 1 | cut -d '"' -f 4)
          chmod +x ./e2ectl
    - run:
        name: Init cluster
        command: |
          ./e2ectl cluster create --worker-count 2
          cp $(./e2ectl kubeconfig path) ${E2E_TEST_DIR}/kubeconfig

    - run:
        name: Run test
        command: |
          docker run --rm --network host \
            -v $(pwd)/${E2E_TEST_DIR}:/e2e \
            -v $(pwd):/go/src/github.com/${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME} \
            -e E2E_TARBALL_URL=https://giantswarm.github.io/default-test-catalog/nginx-ingress-controller-app-$(./architect project version).tgz \
            -e E2E_KUBECONFIG=/e2e/kubeconfig \
            -e CIRCLE_SHA1=${CIRCLE_SHA1} \
            -w /go/src/github.com/${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME} \
            golang:1 go test -timeout 20m -v -tags k8srequired ./${E2E_TEST_DIR}/
    - run:
        name: Export logs
        command: |
          ./e2ectl logs export --logs-dir=kind/logs
        when: always

    - store_artifacts:
        path: kind/logs
        destination: logs

jobs:
  build:
    machine: true
    steps:
      - checkout

      - run:
          name: Get architect binary
          command: |
            wget -q $(curl -sS -H "Authorization: token $RELEASE_TOKEN" https://api.github.com/repos/giantswarm/architect/releases/tags/v1.0.0 | grep browser_download_url | head -n 1 | cut -d '"' -f 4)
            chmod +x ./architect
            ./architect version
      - run: ./architect build

      - persist_to_workspace:
          root: .
          paths:
            - ./architect

  e2eTestBasic:
    environment:
      E2E_TEST_DIR: "integration/test/basic"
      E2E_TEST_NAME: "basic"
    <<: *e2eTest

  run_kat_tests:
    machine:
      image: ubuntu-1604:201903-01
    working_directory:
      ~/nginx-ingress-controller-app
    steps:
      - checkout
      - run: pyenv versions
      - run: pyenv global 3.7.0
      - run: python --version
      - run: pip install pipenv aws-shell
      - run: curl -Lo /tmp/kind "https://github.com/kubernetes-sigs/kind/releases/download/v0.7.0/kind-$(uname)-amd64"
      - run: chmod +x /tmp/kind
      - run: curl -Lo /tmp/helm.tar.gz https://get.helm.sh/helm-v2.16.5-linux-amd64.tar.gz
      - run: tar zxf /tmp/helm.tar.gz -C /tmp && mv /tmp/linux-amd64/helm /tmp/helm
      - run: /tmp/helm init -c
      - run: curl -Lo /tmp/kind-app-testing.sh -q https://raw.githubusercontent.com/giantswarm/kube-app-testing/master/kube-app-testing.sh
      - run: chmod +x /tmp/kind-app-testing.sh
      - run: curl -Lo /tmp/kubectl https://storage.googleapis.com/kubernetes-release/release/v1.18.0/bin/linux/amd64/kubectl
      - run: chmod +x /tmp/kubectl
      - run: PATH="/tmp:$PATH" kind-app-testing.sh -c ${CIRCLE_PROJECT_REPONAME} -t giantswarm --cluster-name ci-${CIRCLE_PROJECT_REPONAME} -n kube-system -a ${GS_API_KEY} -r ${GS_RELEASE} --availability-zone ${GS_AVAILABILITY_ZONE} --giantswarm-api-url ${GS_API_URL} --keep-after-test --min-scaling 3 --max-scaling 3
      - store_test_results:
          path: test-results
      - store_artifacts:
          path: test-results
      - run:
          name: Cleanup resources
          command: PATH="/tmp:$PATH" kind-app-testing.sh -a ${GS_API_KEY} --force-cleanup
          when: on_fail

workflows:
  version: 2
  build_e2e:
    jobs:
      - build
      
      - architect/push-to-app-catalog:
          name: push-to-default-app-catalog
          app_catalog: "default-catalog"
          app_catalog_test: "default-test-catalog"
          chart: "nginx-ingress-controller-app"
          filters:
            # Trigger the job also on git tag.
            tags:
              only: /^v.*/

      - architect/push-to-app-catalog:
          name: push-to-giantswarm-app-catalog
          app_catalog: "giantswarm-catalog"
          app_catalog_test: "giantswarm-test-catalog"
          chart: "nginx-ingress-controller-app"
          filters:
            # Trigger the job also on git tag.
            tags:
              only: /^v.*/

      - e2eTestBasic:
          requires:
            - build
            - push-to-default-app-catalog
            - push-to-giantswarm-app-catalog
          filters:
            # Do not trigger the job on merge to master.
            branches:
              ignore:
                - master

      - run_kat_tests:
          requires:
            - build
            - push-to-default-app-catalog
            - push-to-giantswarm-app-catalog
          filters:
            # Do not trigger the job on merge to master.
            branches:
              ignore:
                - master
