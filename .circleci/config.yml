version: 2.1
orbs:
  architect: giantswarm/architect@0.17.0

jobs:
  run-perf-tests:
    machine:
      image: ubuntu-1604:201903-01
    working_directory:
      ~/nginx-ingress-controller-app
    steps:
      - checkout
      - run: pyenv versions
      - run: pyenv global 3.7.0
      - run: python --version
      - run: pip install pipenv aws-shell
      - run: curl -Lo /tmp/kind "https://github.com/kubernetes-sigs/kind/releases/download/v0.7.0/kind-$(uname)-amd64"
      - run: chmod +x /tmp/kind
      - run: curl -Lo /tmp/helm.tar.gz https://get.helm.sh/helm-v2.16.5-linux-amd64.tar.gz
      - run: tar zxf /tmp/helm.tar.gz -C /tmp && mv /tmp/linux-amd64/helm /tmp/helm
      - run: /tmp/helm init -c
      - run: curl -Lo /tmp/kind-app-testing.sh -q https://raw.githubusercontent.com/giantswarm/kube-app-testing/6a103d9298ed56fe62b379688e0cee8dc41ada0f/kube-app-testing.sh
      - run: chmod +x /tmp/kind-app-testing.sh
      - run: curl -Lo /tmp/kubectl https://storage.googleapis.com/kubernetes-release/release/v1.18.0/bin/linux/amd64/kubectl
      - run: chmod +x /tmp/kubectl
      - run: curl -SL https://github.com/giantswarm/gsctl/releases/download/0.25.0/gsctl-0.25.0-linux-amd64.tar.gz | tar -C /tmp --strip-components 1 -xvzf - gsctl-0.25.0-linux-amd64/gsctl
      - run: export GSCTL_ENDPOINT="${GS_API_URL}"; export GSCTL_AUTH_TOKEN="${GS_API_KEY}"; PATH="/tmp:$PATH" kind-app-testing.sh -c ${CIRCLE_PROJECT_REPONAME} -t giantswarm --cluster-name ci-${CIRCLE_PROJECT_REPONAME} -n kube-system -r ${GS_RELEASE} --availability-zone ${GS_AVAILABILITY_ZONE} --min-scaling 3 --max-scaling 3
      - store_test_results:
          path: test-results
      - store_artifacts:
          path: test-results
      - run:
          name: Cleanup resources
          command: PATH="/tmp:$PATH" GSCTL_ENDPOINT="${GS_API_URL}" GSCTL_AUTH_TOKEN="${GS_API_KEY}" kind-app-testing.sh --force-cleanup
          when: on_fail

workflows:
  version: 2
  build:
    jobs:
      - architect/push-to-app-catalog:
          name: push-to-default-app-catalog
          app_catalog: "default-catalog"
          app_catalog_test: "default-test-catalog"
          chart: "nginx-ingress-controller-app"
          filters:
            # Trigger the job also on git tag.
            tags:
              only: /^v.*/

      - architect/push-to-app-catalog:
          name: push-to-giantswarm-app-catalog
          app_catalog: "giantswarm-catalog"
          app_catalog_test: "giantswarm-test-catalog"
          chart: "nginx-ingress-controller-app"
          filters:
            # Trigger the job also on git tag.
            tags:
              only: /^v.*/

      - architect/integration-test:
          context: architect
          name: basic-integration-test
          test-dir: "integration/test/basic"
          filters:
            # Do not trigger the job on merge to master.
            branches:
              ignore:
                - master
          requires:
            - push-to-default-app-catalog
            - push-to-giantswarm-app-catalog

      # Require manual approval for running performance tests.
      - hold-run-perf-tests:
          type: approval
          filters:
            # Do not trigger the job on master branch or release tags.
            branches:
              ignore:
                - master
            tags:
              ignore: /^v.*/

      - run-perf-tests:
          requires:
            - hold-run-perf-tests
            - basic-integration-test
          filters:
            # Do not trigger the job on master branch or release tags.
            branches:
              ignore:
                - master
            tags:
              ignore: /^v.*/
